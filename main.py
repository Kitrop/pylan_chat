import threading
import argparse
import sys
from discovery import DiscoveryService, router as discovery_router, initialize_discovery
from msg_server import app as message_app
from file_tsf import app as file_app
from fastapi import FastAPI
import uvicorn
import socket
import re

# –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ FastAPI
main_app = FastAPI()
main_app.mount("/message", message_app)
main_app.mount("/file", file_app)
main_app.include_router(discovery_router, prefix="/discovery")


class ServiceController:
    def __init__(self):
        self.discovery = None
        self.service_port = None

    def run_discovery(self, port=None):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ IP (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ 192.168.*)
        self.local_ip = self.get_local_ip()
        if not self.local_ip:
            raise RuntimeError(
                "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π LAN IP, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")

        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞
        self.service_port = port or self.get_free_port()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
        self.discovery = DiscoveryService(
            f"LANChat_{self.service_port}",
            self.service_port,
            self.local_ip
        )
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –¥–ª—è API endpoints
        initialize_discovery(self.discovery)
        # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
        self.discovery.start_advertising()
        self.discovery.start_discovery()
        print(f"‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –Ω–∞ {self.local_ip}:{self.service_port}")

    @staticmethod
    def get_local_ip():
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ LAN IP (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ 192.168.*)"""
        try:
            hostname = socket.gethostname()
            ip_list = socket.gethostbyname_ex(hostname)[2]
            for ip in ip_list:
                if ip.startswith("192.168."):
                    return ip
            return ip_list[0] if ip_list else None
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP: {e}")
            return None

    @staticmethod
    def get_free_port():
        """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞"""
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.bind(('', 0))
            return s.getsockname()[1]

    def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤"""
        try:
            if self.discovery:
                self.discovery.stop()
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–µ—Ä–≤–∏—Å–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è: {e}")


def run_gui():
    """–ó–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    try:
        from gui import main as gui_main
        print("üöÄ –ó–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
        gui_main()
    except ImportError as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å GUI –º–æ–¥—É–ª—å: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª gui.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ GUI: {e}")


def run_cli():
    """–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
    print("""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë             LANChat - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —á–∞—Ç–∞ –≤ LAN ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

–§—É–Ω–∫—Ü–∏–∏:
1. –°–µ—Ä–≤–∏—Å —Å–æ–æ–±—â–µ–Ω–∏–π
   - WebSocket —Å–≤—è–∑—å: ws://<IP>:<PORT>/message/ws
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —á–∞—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

2. –ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤
   - –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤: http://<IP>:<PORT>/file/upload
   - –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤: http://<IP>:<PORT>/file/download/<filename>

3. –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ LANChat –≤ LAN
   - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–Ω–ª–∞–π–Ω —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
- –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä --port –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –ø–æ—Ä—Ç–∞
""")
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    parser = argparse.ArgumentParser()
    parser.add_argument("--port", type=int,
                        help="–£–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ç —Å–µ—Ä–≤–∏—Å–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
    args = parser.parse_args()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
    controller = ServiceController()

    # –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
    discovery_thread = threading.Thread(
        target=controller.run_discovery,
        kwargs={"port": args.port}
    )
    discovery_thread.daemon = True
    discovery_thread.start()

    # –û–∂–∏–¥–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ—Ä—Ç–∞
    while not controller.service_port:
        pass

    # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
    print(f"üåê –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç: {controller.service_port}")

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥
    from commands import CommandHandler
    cmd_handler = CommandHandler(controller.local_ip, controller.service_port)

    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    server_thread = threading.Thread(
        target=lambda: uvicorn.run(
            main_app,
            host="0.0.0.0",
            port=controller.service_port,
            log_level="info"
        )
    )
    server_thread.daemon = True
    server_thread.start()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ stdin (–¥–ª—è --windowed —Ä–µ–∂–∏–º–∞)
    try:
        import msvcrt
        has_stdin = True
    except ImportError:
        has_stdin = hasattr(sys, 'stdin') and sys.stdin.isatty()

    try:
        if not has_stdin:
            print("‚ö†Ô∏è –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤–≤–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (--windowed —Ä–µ–∂–∏–º)")
            print("üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
            print(
                "üí° –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–µ–∑ --windowed")

            # –î–µ—Ä–∂–∏–º –ø—Ä–æ–≥—Ä–∞–º–º—É –∑–∞–ø—É—â–µ–Ω–Ω–æ–π
            while True:
                import time
                time.sleep(1)
        else:
            # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            while True:
                cmd = input("\n>>> ").strip()
                if not cmd:
                    continue

                if cmd.startswith("/"):
                    cmd = cmd[1:]

                if cmd == "quit" or cmd == "exit":
                    break
                elif cmd == "help":
                    cmd_handler.show_help()
                elif cmd == "chat":  # –ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ —á–∞—Ç–∞
                    cmd_handler.boardcast_start_chat()
                elif cmd == "devices":
                    cmd_handler.show_online_devices()
                elif cmd.startswith("upload "):
                    parts = cmd.split(" ")
                    if len(parts) > 2:
                        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
                        file_path = parts[1]
                        target_param = parts[2]
                        cmd_handler.upload_file(file_path, target_param)
                    else:
                        # –û–±—ã—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
                        file_path = parts[1]
                        cmd_handler.upload_file(file_path)
                elif cmd.startswith("download "):
                    file_name = cmd.split(" ", 1)[1]
                    source = input("–í–≤–µ–¥–∏—Ç–µ IP:–ø–æ—Ä—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: ")
                    cmd_handler.download_file(file_name, source)
                else:
                    print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –≤–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏")

    except KeyboardInterrupt:
        print("\n–í—ã—Ö–æ–¥...")
    finally:
        controller.cleanup()


if __name__ == "__main__":
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    parser = argparse.ArgumentParser(
        description="LANChat - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —á–∞—Ç–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏")
    parser.add_argument("--port", type=int,
                        help="–£–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ç —Å–µ—Ä–≤–∏—Å–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
    parser.add_argument("--cli", action="store_true",
                        help="–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (CLI)")
    args = parser.parse_args()

    if args.cli:
        # –ó–∞–ø—É—Å–∫ CLI
        run_cli()
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–ø—É—Å–∫–∞–µ–º GUI
        run_gui()
